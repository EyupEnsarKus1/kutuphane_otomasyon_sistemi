<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Sv/Z
</value>
  </data>
</root>